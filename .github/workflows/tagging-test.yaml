# 1. 태그 정보 가져오기 git tag --sort=-v:refname | head -1
# 2. 태깅 하기

name: Release Tag
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: test
      run: |
        echo $(pwd)
        echo $(git tag)

    - name: Extract recent version
      run: |
        RECENT_TAG=$(git tag --sort=-v:refname | head -1)
        echo "RECENT_TAG=$RECENT_TAG" >> $GITHUB_ENV

    - name: Split tag strings
      if: ${{ env.RECENT_TAG }} != ''
      uses: jungwinter/split@v2
      id: split
      with:
        msg: ${{ env.RECENT_TAG }}
        separator: '.'
    
    - name: Create new version name
      if: steps.split.outputs._0 != ''
      run: |
        A=$(expr $(( ${{steps.split.outputs._2}} )) + 1)
        B="$B$A"
        LAST_TAG_NUM=$B
        NEW_TAG_NAME="${{steps.split.outputs._0}}.${{steps.split.outputs._1}}.$LAST_TAG_NUM"
        echo "NEW_TAG_NAME=$NEW_TAG_NAME" >> $GITHUB_ENV

    - name: Create Release
      if: steps.split.outputs._0 != ''
      uses: actions/create-release@v1
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with: 
        tag_name: ${{ env.NEW_TAG_NAME }} 
        release_name: "What is this?"
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: false
        prerelease: false

    - name: Error
      if: steps.split.outputs._0 == ''
      run: |
        echo "Invalid Tag name!"
        exit 0