# 1. 태그 정보 가져오기 git tag --sort=-v:refname | head -1
# 2. 태깅 하기

name: Release Tag
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      version:
        description: 'If you want release specific version, input like format v0.0.0'
        default: 'v0.0.0'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Clone test repository
      run: |
        git clone https://$GITHUB_ACTOR:${{ secrets.TEST }}@github.com/zbeeS2/test.git

    - name: Extract current version
      working-directory: test
      run: |
        echo "RECENT_TAG_NAME=$(git tag --sort=-v:refname | head -1)" >> $GITHUB_ENV
        echo "IDL_COMMIT_HASH=$(git log --pretty="%H" -1)" >> $GITHUB_ENV
        echo "IDL_COMMIT_MESSAGE=$(git log --pretty="%s" -1)" >> $GITHUB_ENV
        echo "IDL_COMMIT_PUSHER_NAME=$(git log --pretty="%cn" -1)" >> $GITHUB_ENV

    - name: Split tag strings
      if: success()
      uses: jungwinter/split@v2
      id: split
      with:
        msg: ${{ env.RECENT_TAG_NAME }}
        separator: '.'

    - name: Check the changes
      working-directory: test
      run: |
        RECENT_TAGS_COMMIT_HASH=$(git log $RECENT_TAG_NAME | grep commit | head -1 | awk '{print $2}')
        if [ "$RECENT_TAGS_COMMIT_HASH" == "$IDL_COMMIT_HASH" ]; then
          echo "No changes."
          IS_CHANGE=false
          exit 0
        fi
        echo "Detecting changes."
        IS_CHANGE=true
        echo "IS_CHANGE=$IS_CHANGE" >> $GITHUB_ENV
    
    - name: Create new version name
      working-directory: test
      if: ${{ env.IS_CHANGE }}
      run: |
        SPECIFIC_VERSION=${{ github.event.inputs.version }}
        if [ $(git tag -l "$SPECIFIC_VERSION")]; then
          echo "[!] input version is existing version!"
          exit 1
        fi

        if [ "$SPECIFIV_VERSION" == "v0.0.0"]; then
          echo "Release by specific version."
          echo "NEW_TAG_NAME=$SPECIFIC_VESION" >> $GITHUB_ENV  
          exit 0
        fi

        A=$(expr $(( ${{steps.split.outputs._2}} )) + 1)
        B="$B$A"
        LAST_TAG_NUM=$B
        NEW_TAG_NAME="${{steps.split.outputs._0}}.${{steps.split.outputs._1}}.$LAST_TAG_NUM"
        echo "NEW_TAG_NAME=$NEW_TAG_NAME" >> $GITHUB_ENV

    - name: Create release body
      if: ${{ env.IS_CHANGE }}
      run: |
        touch release_body
        echo "### What's Changed" >> release_body
        echo "* ${{ env.IDL_COMMIT_MESSAGE }} by @${{ env.IDL_COMMIT_PUSHER_NAME }}" >> release_body
        echo "**Full Changelog**: https://github.com/zbeeS2/test/compare/${{ env.RECENT_TAG_NAME }}...${{ env.NEW_TAG_NAME }}" >> release_body

    - name: Create Release
      if: ${{ env.IS_CHANGE }}
      uses: actions/create-release@v1
      env: 
        GITHUB_TOKEN: ${{ secrets.TEST }}
      with: 
        tag_name: ${{ env.NEW_TAG_NAME }} 
        release_name: ${{ env.NEW_TAG_NAME }} 
        body_path: ./release_body
        repo: test
        commitish: ${{ env.IDL_COMMIT_HASH }}

    - name: Error
      if: steps.split.outputs._0 == ''
      run: |
        echo "Invalid Tag name!"
        exit 0